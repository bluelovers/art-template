{"version":3,"sources":["../../src/compile/runtime.js"],"names":["globalThis","self","window","global","runtime","Object","create","ESCAPE_REG","$escape","xmlEscape","toString","content","$each","data","callback","Array","isArray","i","len","length","value","undefined","call","JSON","stringify","html","regexResult","exec","result","lastIndex","char","index","charCodeAt","substring","module","exports"],"mappings":";;AAAA;;AAEA,IAAMA,aAAa,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GACb,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GACA,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EAF/C;;AAIA,IAAMC,UAAUC,OAAOC,MAAP,CAAcN,UAAd,CAAhB;AACA,IAAMO,aAAa,SAAnB;;AAEA;;;;;AAKAH,QAAQI,OAAR,GAAkB;AAAA,WAAWC,UAAUC,SAASC,OAAT,CAAV,CAAX;AAAA,CAAlB;;AAEA;;;;;AAKAP,QAAQQ,KAAR,GAAgB,UAACC,IAAD,EAAOC,QAAP,EAAoB;AAChC,QAAIC,MAAMC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACrB,aAAK,IAAII,IAAI,CAAR,EAAWC,MAAML,KAAKM,MAA3B,EAAmCF,IAAIC,GAAvC,EAA4CD,GAA5C,EAAiD;AAC7CH,qBAASD,KAAKI,CAAL,CAAT,EAAkBA,CAAlB;AACH;AACJ,KAJD,MAIO;AACH,aAAK,IAAIA,EAAT,IAAcJ,IAAd,EAAoB;AAChBC,qBAASD,KAAKI,EAAL,CAAT,EAAkBA,EAAlB;AACH;AACJ;AACJ,CAVD;;AAYA;AACA,SAASP,QAAT,CAAkBU,KAAlB,EAAyB;AACrB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,YAAIA,UAAUC,SAAV,IAAuBD,UAAU,IAArC,EAA2C;AACvCA,oBAAQ,EAAR;AACH,SAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AACpCA,oBAAQV,SAASU,MAAME,IAAN,CAAWF,KAAX,CAAT,CAAR;AACH,SAFM,MAEA;AACHA,oBAAQG,KAAKC,SAAL,CAAeJ,KAAf,CAAR;AACH;AACJ;;AAED,WAAOA,KAAP;AACH;;AAED;AACA,SAASX,SAAT,CAAmBE,OAAnB,EAA4B;AACxB,QAAMc,OAAO,KAAKd,OAAlB;AACA,QAAMe,cAAcnB,WAAWoB,IAAX,CAAgBF,IAAhB,CAApB;AACA,QAAI,CAACC,WAAL,EAAkB;AACd,eAAOf,OAAP;AACH;;AAED,QAAIiB,SAAS,EAAb;AACA,QAAIX,UAAJ;AAAA,QAAOY,kBAAP;AAAA,QAAkBC,aAAlB;AACA,SAAKb,IAAIS,YAAYK,KAAhB,EAAuBF,YAAY,CAAxC,EAA2CZ,IAAIQ,KAAKN,MAApD,EAA4DF,GAA5D,EAAiE;AAC7D,gBAAQQ,KAAKO,UAAL,CAAgBf,CAAhB,CAAR;AACI,iBAAK,EAAL;AACIa,uBAAO,OAAP;AACA;AACJ,iBAAK,EAAL;AACIA,uBAAO,OAAP;AACA;AACJ,iBAAK,EAAL;AACIA,uBAAO,OAAP;AACA;AACJ,iBAAK,EAAL;AACIA,uBAAO,OAAP;AACA;AACJ,iBAAK,EAAL;AACIA,uBAAO,OAAP;AACA;AACJ;AACI;AAjBR;;AAoBA,YAAID,cAAcZ,CAAlB,EAAqB;AACjBW,sBAAUH,KAAKQ,SAAL,CAAeJ,SAAf,EAA0BZ,CAA1B,CAAV;AACH;;AAEDY,oBAAYZ,IAAI,CAAhB;AACAW,kBAAUE,IAAV;AACH;;AAED,QAAID,cAAcZ,CAAlB,EAAqB;AACjB,eAAOW,SAASH,KAAKQ,SAAL,CAAeJ,SAAf,EAA0BZ,CAA1B,CAAhB;AACH,KAFD,MAEO;AACH,eAAOW,MAAP;AACH;AACJ;;AAEDM,OAAOC,OAAP,GAAiB/B,OAAjB","file":"runtime.js","sourcesContent":["/*! art-template@runtime | https://github.com/aui/art-template */\n\nconst globalThis = typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n    : typeof global !== 'undefined' ? global : {};\n\nconst runtime = Object.create(globalThis);\nconst ESCAPE_REG = /[\"&'<>]/;\n\n/**\n * 编码模板输出的内容\n * @param  {any}        content\n * @return {string}\n */\nruntime.$escape = content => xmlEscape(toString(content));\n\n/**\n * 迭代器，支持数组与对象\n * @param {array|Object} data\n * @param {function}     callback\n */\nruntime.$each = (data, callback) => {\n    if (Array.isArray(data)) {\n        for (let i = 0, len = data.length; i < len; i++) {\n            callback(data[i], i);\n        }\n    } else {\n        for (let i in data) {\n            callback(data[i], i);\n        }\n    }\n};\n\n// 将目标转成字符\nfunction toString(value) {\n    if (typeof value !== 'string') {\n        if (value === undefined || value === null) {\n            value = '';\n        } else if (typeof value === 'function') {\n            value = toString(value.call(value));\n        } else {\n            value = JSON.stringify(value);\n        }\n    }\n\n    return value;\n}\n\n// 编码 HTML 内容\nfunction xmlEscape(content) {\n    const html = '' + content;\n    const regexResult = ESCAPE_REG.exec(html);\n    if (!regexResult) {\n        return content;\n    }\n\n    let result = '';\n    let i, lastIndex, char;\n    for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n        switch (html.charCodeAt(i)) {\n            case 34:\n                char = '&#34;';\n                break;\n            case 38:\n                char = '&#38;';\n                break;\n            case 39:\n                char = '&#39;';\n                break;\n            case 60:\n                char = '&#60;';\n                break;\n            case 62:\n                char = '&#62;';\n                break;\n            default:\n                continue;\n        }\n\n        if (lastIndex !== i) {\n            result += html.substring(lastIndex, i);\n        }\n\n        lastIndex = i + 1;\n        result += char;\n    }\n\n    if (lastIndex !== i) {\n        return result + html.substring(lastIndex, i);\n    } else {\n        return result;\n    }\n}\n\nmodule.exports = runtime;\n"]}